<Window x:Class="ImageLabelingTool_pre.Views.ClopSizeWindow"
        Style="{StaticResource DefaultWindowStyle}"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:ImageLabelingTool_pre.Views"
        xmlns:vm="clr-namespace:ImageLabelingTool_pre.ViewModels"
        xmlns:properties="clr-namespace:ImageLabelingTool_pre.Properties"
        Title="{x:Static properties:Resources.WINDOW_TITLE_CLOPSIZE}" Height="180" Width="320" FontFamily="Meiryo UI" FontSize="14" >

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>
        
        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

        <l:InteractionMessageTrigger MessageKey="Close" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False" />
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="OpenPopupWindow" Messenger="{Binding Messenger}" >
            <l:InformationDialogInteractionMessageAction />
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>

    <DockPanel>
        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Height="80" >
            <Label Content="切り取りサイズ" VerticalAlignment="Center" Margin="50,0,0,0"/>
            <TextBox Text="{Binding ClopSize}" HorizontalContentAlignment="Left" VerticalAlignment="Stretch" Height="30" Margin="10,0,0,0" Width="50" VerticalContentAlignment="Center" />
            <Label Content="画素" VerticalAlignment="Center" Margin="10,0,0,0"/>
        </StackPanel>
        <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" Height="60">
            <Button Content="OK" Width="100" Height="35" Margin="40,10,20,10" Command="{Binding OkCommand}"/>
            <Button Content="キャンセル" Width="100" Height="35" Margin="20,10,40,10" Command="{Binding CancelCommand}"/>
        </StackPanel>
    </DockPanel>
</Window>
